"""
Django settings for curate_science project.

Generated by 'django-admin startproject' using Django 2.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from dotenv import load_dotenv
load_dotenv()

GOOGLE_APPLICATION_CREDENTIALS = 'curate_science/google_application_credentials.json'
GS_DEFAULT_ACL = 'publicRead'
GS_AUTO_CREATE_ACL = 'publicRead'
GS_AUTO_CREATE_BUCKET = True


# Google App Engine sets environment variable GOOGLE_CLOUD_PROJECT
# If this env var exists, then the app is running on GAE. Else it's local dev environment.
if os.getenv('GOOGLE_CLOUD_PROJECT'):
    #DB_HOST='/cloudsql/curate-science-216207:europe-west1:curatedb'
    #DEBUG = False
    DB_HOST='35.205.158.247' #curatevm
    DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'

    if os.getenv('GOOGLE_CLOUD_PROJECT') in ('curatescience-staging', 'curate-science-staging-2'):
        DB_NAME = 'curate_staging'
        DEBUG = True
        if os.getenv('GOOGLE_CLOUD_PROJECT') == 'curatescience-staging':
            GS_BUCKET_NAME = 'curatescience-staging.appspot.com'
        else:
            GS_BUCKET_NAME = 'curate-science-staging-2.appspot.com'

    else:
        DB_NAME = 'curate'
        GS_BUCKET_NAME = 'curate-science-216207.appspot.com'
        DEBUG = False

else:
    DEBUG = True
    DB_HOST='localhost'
    DB_NAME = 'curate'


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'dal',
    'dal_select2',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.postgres',
    'django.contrib.sites',
    'django.contrib.staticfiles',
    'django_extensions',
    'rest_framework',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'invitations',
    'curate.apps.CurateConfig',
]

SITE_ID = 1
DEFAULT_FROM_DOMAIN = 'curatescience.org'
ACCOUNT_ADAPTER = 'invitations.models.InvitationsAdapter'

# REST_FRAMEWORK = {
#     'DEFAULT_FILTER_BACKENDS': (
#         'django_filters.rest_framework.DjangoFilterBackend',
#     )
# }

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'curate.middleware.no_www_middleware',
]

ROOT_URLCONF = 'curate_science.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'), os.path.join(BASE_DIR, 'dist')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'curate_science.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': DB_NAME,
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASS'),
        'HOST': DB_HOST,
        'PORT': '5432',
    }
}

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
)

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

ROOT_PATH = os.path.dirname(__file__)

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(ROOT_PATH, '../static')

# STATICFILES_DIRS = [os.path.join(ROOT_PATH, 'sitestatic')]

LOGIN_REDIRECT_URL = '/app'
LOGOUT_REDIRECT_URL = '/app'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
        },
        # 'django.db.backends': {
            # 'handlers': ['console'],
            # 'level': 'DEBUG',
        # },
    },
}

#Invitation system settings
INVITATIONS_INVITATION_ONLY = True
#INVITATIONS_INVITATION_ONLY = False
#ACCOUNT_SIGNUP_FORM_CLASS = 'curate.forms.SignupForm'
INVITATIONS_INVITATION_EXPIRY = 30 #invites expire after 30 days
#INVITATIONS_ACCEPT_INVITE_AFTER_SIGNUP = True
#ACCOUNT_FORMS = {'signup': 'curate.forms.CustomSignupForm'}
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_UNIQUE_EMAIL = True
#ACCOUNT_ADAPTER = 'curate.adapters.AccountAdapter'

#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
# EMAIL_USE_SSL = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = os.getenv('EMAIL')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_PASS')
EMAIL_PORT = 587
# EMAL_PORT = 465
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
THUMB_SIZE = (75,75)

if DEBUG:
    # make all loggers use the console.
    for logger in LOGGING['loggers']:
        LOGGING['loggers'][logger]['handlers'] = ['console']
